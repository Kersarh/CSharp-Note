using System;

namespace MyProgram
{
    class Program
    {
        static void Main(string[] args)
        {
            /* Оператор ветвления применяется в случаях,
            * когда выполнение набора команд должно зависеть от выполнения некоторого условия.
            * Это позволяет направлять действия программы по определенному пути.
            */

            /*
            * Конструкция if/else проверяет истинность условия и
            * в зависимости от результатов проверки выполняет определенный код.
            * Блоки else if/else не являются обязательными.
            */

            int n1 = 5;
            int n2 = 10;

            if (n1 > n2)
            {
                Console.WriteLine($"{n1} больше {n2}");
            }
            else if (n1 < n2)
            {
                Console.WriteLine($"{n1} меньше {n2}");
            }
            else
            {
                Console.WriteLine("Что-то другое...");
            }

            // Так же возможно задать одновременно несколько условий через логические операторы.
            // Блок if будет выполняться, если n1 > n2 и n1==5.
            if (n1 > n2 && n1 == 5)
            {
                Console.WriteLine($"Число {n1} больше числа {n2} и {n1} = 5");
            }

            /*
             * switch — оператор выбора, который выбирает для выполнения один раздел сase
             * из списка кандидатов, сравнивая их с выражением соответствия.
             * После ключевого слова switch в скобках идет сравниваемое выражение.
             * Значение этого выражения сравнивается со значениями, после оператора сase.
             * При наличии совпадения будет выполняться определенный блок сase.
             * В конце блока сase должен быть один из операторов:
             * break, goto case, return или throw.
             * Обычно используется оператор break в этом случае другие блоки кода не  выполняются
             */

            int num = 1;
            switch (num)
            {
                case 1:
                    Console.WriteLine("Блок 1");
                    goto case 3; // перейти к case 3
                case 2:
                    Console.WriteLine("Блок 3");
                    break;
                case 3:
                    Console.WriteLine("Блок 5");
                    break;
                default: // Если совпадений нет
                    Console.WriteLine("Совпадений нет!");
                    break;
            }


            /*
            * Условный оператор ?:, известный как тернарный условный оператор,
            * вычисляет логическое выражение и возвращает результат вычисления
            * одного из двух выражений в зависимости от того,
            * чему равно значение логического выражения: true или false.
            * Тернарная операция имеет следующий синтаксис:
            * [условие] ? [если true] : [если false]
            * если условие = true возвращается второе выражение
            * если условие = false, то третье выражение.
            */

            int x = 1;
            int y = 2;

            string z = x < y ? ("Да") : ("Нет");
            // Если x меньше y то вернуть ДА иначе НЕТ
            Console.WriteLine(z); // Да

        }
    }
}
